/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2023-11-25 13:34:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class draw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/maven/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/header.jsp", Long.valueOf(1700821643676L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/maven/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("file:/C:/eGovFrame-4.0.0/maven/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1612850415545L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/maven/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("file:/C:/eGovFrame-4.0.0/maven/repository/org/springframework/security/spring-security-taglibs/5.7.3/spring-security-taglibs-5.7.3.jar", Long.valueOf(1699273043661L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/maven/repository/org/springframework/security/spring-security-taglibs/5.7.3/spring-security-taglibs-5.7.3.jar!/META-INF/security.tld", Long.valueOf(1660546378000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>DrawColi</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("   <meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("   <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("   <meta name=\"author\" content=\"TemplatesJungle\">\r\n");
      out.write("   <meta name=\"keywords\" content=\"Free HTML Template\">\r\n");
      out.write("   <meta name=\"description\" content=\"Free HTML Template\">\r\n");
      out.write("   \r\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/icomoon/icomoon.css\">\r\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/vendor.css\">\r\n");
      out.write("   <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\" crossorigin=\"anonymous\">\r\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/style.css\">\r\n");
      out.write("   \r\n");
      out.write("   <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("   <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("   <link\r\n");
      out.write("      href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@900&family=Roboto:ital,wght@0,400;0,700;1,400;1,700&display=swap\"\r\n");
      out.write("      rel=\"stylesheet\">   \r\n");
      out.write("      \r\n");
      out.write("   <script src=\"https://cdn.jsdelivr.net/npm/@mediapipe/pose/pose.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("   <style>\r\n");
      out.write("  /* 페이지 전체에 대한 기본 스타일 */\r\n");
      out.write("  body {\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    background: #f0f0f0;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  /* 상단 네비게이션 바 스타일 */\r\n");
      out.write("  .navbar {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .navbar img {\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .navbar a {\r\n");
      out.write("    color: #4CAF50; /* 초록색 로고 텍스트 */\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 그리드 레이아웃 스타일 */\r\n");
      out.write("  .grid-container {\r\n");
      out.write("    display: grid;\r\n");
      out.write("    grid-template-columns: 1fr 3fr 1fr; /* 세 부분으로 나누기 */\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .grid-item {\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  /* 왼쪽 메뉴 스타일 */\r\n");
      out.write("  #action-selection {\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-wrap: wrap; /* 줄 바꿈 설정 */\r\n");
      out.write("    gap: 5px; /* 버튼 사이의 간격 */\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #action-selection a {\r\n");
      out.write("    display: block;\r\n");
      out.write("    width: max-content; /* 텍스트 크기에 맞게 조절됨 */\r\n");
      out.write("    height: max-content;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    margin: 2px 0;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    background-color: #f7f7f7;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    color: black;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    white-space: nowrap;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    text-overflow: ellipsis;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("  /* 오른쪽 섹션 스타일 */\r\n");
      out.write("  #my-work-history select {\r\n");
      out.write("    width: calc(100% - 40px); /* 아이콘 공간 빼고 너비 */\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  #my-work-history img {\r\n");
      out.write("    vertical-align: middle;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  html, body {\r\n");
      out.write("    height: 100%;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  body {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .grid-container {\r\n");
      out.write("    flex: 1; /* 중요: 그리드 컨테이너가 남은 공간을 모두 차지하도록 설정 */\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .navbar {\r\n");
      out.write("    justify-content: space-between; /* 로고와 내 작업내역을 간격을 두고 정렬 */\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 내 작업내역 스타일 */\r\n");
      out.write("  .my-work {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .my-work select {\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("    width: 150px; /* 선택창의 너비 설정 */\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_sec_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>DrawColi</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("   <meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("   <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("   <meta name=\"author\" content=\"TemplatesJungle\">\r\n");
      out.write("   <meta name=\"keywords\" content=\"Free HTML Template\">\r\n");
      out.write("   <meta name=\"description\" content=\"Free HTML Template\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div class=\"preloader\"></div>\r\n");
      out.write("\r\n");
      out.write("   <div class=\"nav nav-overlay\">\r\n");
      out.write("      <div class=\"nav__content\">\r\n");
      out.write("         <div class=\"container\">\r\n");
      out.write("            <div class=\"row p-4 p-md-0 flex-column-reverse flex-md-row g-md-5 nav__block\">\r\n");
      out.write("               <div class=\"col-md-5\">\r\n");
      out.write("                  <ul class=\"nav__list d-none d-md-block\">\r\n");
      out.write("                     <li class=\"nav__list-item active-nav\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\" class=\"hover-target\">Home</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav__list-item\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/login\" class=\"hover-target\">LogIn</a></li>\r\n");
      out.write("                     <li class=\"nav__list-item\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan\" class=\"hover-target\">Plan</a></li>\r\n");
      out.write("                     <li class=\"nav__list-item\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/draw\" class=\"hover-target\">Draw</a></li>\r\n");
      out.write("                     <li class=\"nav__list-item\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/gallery\" class=\"hover-target\">Gallery</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav__list-item\"><a href=\"contact.html\" class=\"hover-target\">guide</a></li>\r\n");
      out.write("                  </ul>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"col-md-4 text-white\">\r\n");
      out.write("                  <h3 class=\"text-white fw-bold nav__block-item\">AI Draw</h3>\r\n");
      out.write("                  <p class=\"text-light nav__block-item\">카메라 앞에서 움직이면, 내 포즈와 똑같은 모델이 생성됩니다.\r\n");
      out.write("                  캐릭터를 업로드 한 뒤에는 내 움직임에 따라 내 캐릭터도 함께 움직일거예요 !</p>\r\n");
      out.write("                  <ul class=\"list-unstyled text-light nav__block-item\">\r\n");
      out.write("                     <li><a href=\"onepage.html\" class=\"text-white\">AI Draw - 클릭형</a></li>\r\n");
      out.write("                     <li><a href=\"onepage.html\" class=\"text-white\">AI Draw - 이미지업로드</a></li>\r\n");
      out.write("                     <li><a href=\"onepage.html\" class=\"text-white\">AI Draw - 실시간 영상촬영</a></li>\r\n");
      out.write("                  </ul>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"col-md-3 text-white\">\r\n");
      out.write("                  <h3 class=\"text-white fw-bold nav__block-item\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/mypage';\" style=\"cursor:pointer; user-select: none;\">MyPage</h3>\r\n");
      out.write("                  <ul class=\"list-unstyled nav__block-item\">\r\n");
      out.write("                     <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/modify\" class=\"text-white\">My Account</a></li>\r\n");
      out.write("                     <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mygallery/{username}\" class=\"text-white\">My Gallery</a></li>\r\n");
      out.write("                     <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/myplan\" class=\"text-white\">My Plan</a></li>\r\n");
      out.write("                     ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                     ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                  </ul>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <div class=\"main-logo\">\r\n");
      out.write("      <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">DrawColi.</a>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   <!-- 로그인했을 때 상단 -->\r\n");
      out.write("   ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <div class=\"side-nav-bar\">\r\n");
      out.write("      <input id=\"menu-toggle\" type=\"checkbox\" />\r\n");
      out.write("      <label class=\"menu-btn\" for=\"menu-toggle\">\r\n");
      out.write("         <span></span>\r\n");
      out.write("      </label>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("      <section id=\"login-intro\" class=\"login-section\"\">\r\n");
      out.write("      <div class=\"log-in\"\">\r\n");
      out.write("         <div class=\"login-top\"\">\r\n");
      out.write("            <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/main-banner1.png\" alt=\"banner\" class=\"login-img\">\r\n");
      out.write("            <div class=\"login-content\">\r\n");
      out.write("               <h2 class=\"login-title\">Draw</h2>\r\n");
      out.write("            </div><!--banner-content-->\r\n");
      out.write("         </div><!--slider-item-->\r\n");
      out.write("                  \r\n");
      out.write("         <div class=\"contentarea\">\r\n");
      out.write("              \r\n");
      out.write("              <!-- 상단 네비게이션 바 -->\r\n");
      out.write("<div class=\"navbar\">\r\n");
      out.write("  <img src=\"home-icon.png\" alt=\"Home\"> <!-- 집 아이콘 이미지 -->\r\n");
      out.write("  <a href=\"/\">DrawColi</a> <!-- 로고와 메인 페이지 링크 -->\r\n");
      out.write("\r\n");
      out.write("  <div class=\"my-work\">\r\n");
      out.write("    <select name=\"work-history\" id=\"work-history\">\r\n");
      out.write("      <option value=\"option1\">옵션 1</option>\r\n");
      out.write("      <option value=\"option2\">옵션 2</option>\r\n");
      out.write("      <!-- 여기에 더 많은 옵션을 추가할 수 있습니다. -->\r\n");
      out.write("    </select>\r\n");
      out.write("    <img src=\"folder-icon.png\" alt=\"Folder\"> <!-- 폴더 아이콘 이미지 -->\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"grid-container\">\r\n");
      out.write("  \r\n");
      out.write("  <!-- 왼쪽 섹션: 동작 선택 -->\r\n");
      out.write("  <div class=\"grid-item\" id=\"action-selection\">\r\n");
      out.write("    <a href=\"#\">양손 팔을 든다</a>\r\n");
      out.write("    <a href=\"#\">팔꿈치를 굽힌다</a>\r\n");
      out.write("    <a href=\"#\">다리를 굽힌다</a>\r\n");
      out.write("    <a href=\"#\">기대어 앉다</a>\r\n");
      out.write("    <a href=\"#\">앉다</a>\r\n");
      out.write("    <a href=\"#\">서다</a>\r\n");
      out.write("    <a href=\"#\">눕다</a>\r\n");
      out.write("    <a href=\"#\">두 손 기대다</a>\r\n");
      out.write("    <a href=\"#\">활짝</a>\r\n");
      out.write("    <div>\r\n");
      out.write("      <p>이미지 및 음성을 업로드 하세요.</p>\r\n");
      out.write("      <input type=\"file\" id=\"fileUpload\" class=\"upload-link\"/>\r\n");
      out.write("      <img id=\"uploadedImage\" style=\"max-width: 100%; display:none;\" alt=\"Uploaded Image\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"camera\">\r\n");
      out.write("                  <video id=\"video\">Video stream not available.</video>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div><button id=\"startbutton\">Take photo</button></div>\r\n");
      out.write("              <canvas id=\"canvas\" style=\"display:none;\"></canvas>\r\n");
      out.write("    <div>\r\n");
      out.write("      <span>남은 문장 제한 횟수</span>\r\n");
      out.write("      <span>9/10</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("    <a href=\"#\">생성하기</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- 중앙 섹션: 내 이미지 -->\r\n");
      out.write("  <div class=\"grid-item\" id=\"my-image\">\r\n");
      out.write("    <p>내 이미지</p>\r\n");
      out.write("    <div class=\"output\">\r\n");
      out.write("                  <img id=\"photo\" alt=\"The screen capture will appear in this box.\">\r\n");
      out.write("      </div>\r\n");
      out.write("    <!-- 이미지 내용이 여기에 들어갑니다. -->\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- 오른쪽 섹션: 현재 작업 내역 -->\r\n");
      out.write("  <div class=\"grid-item\" id=\"my-work-history\">\r\n");
      out.write("    <p>현재 작업 내역</p>\r\n");
      out.write("    <!-- ... -->\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <button id=\"savebutton\">Save Results</button>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("   <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\r\n");
      out.write("   <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("      \r\n");
      out.write("   <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("   <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/ui-easing.js\"></script>\r\n");
      out.write("   <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("      integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\"\r\n");
      out.write("      crossorigin=\"anonymous\"></script>\r\n");
      out.write("   <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/plugins.js\"></script>\r\n");
      out.write("   <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/script.js\"></script>\r\n");
      out.write("   \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    (function () {\r\n");
      out.write("        var width = 320;\r\n");
      out.write("        var height = 0;\r\n");
      out.write("        var streaming = false;\r\n");
      out.write("        var video = null;\r\n");
      out.write("        var canvas = null;\r\n");
      out.write("        var uploadedImage = null;\r\n");
      out.write("        var photo = null;\r\n");
      out.write("        var startbutton = null;\r\n");
      out.write("        \r\n");
      out.write("        // 전역으로 pose 객체 선언\r\n");
      out.write("        var pose = null;\r\n");
      out.write("\r\n");
      out.write("        function startup() {\r\n");
      out.write("            video = document.getElementById('video');\r\n");
      out.write("            canvas = document.getElementById('canvas');\r\n");
      out.write("            photo = document.getElementById('photo');\r\n");
      out.write("            fileUpload_draw = document.getElementById('fileUpload');\r\n");
      out.write("            startbutton = document.getElementById('startbutton');\r\n");
      out.write("            uploadedImage = document.getElementById('uploadedImage');\r\n");
      out.write("\r\n");
      out.write("            navigator.mediaDevices.getUserMedia({\r\n");
      out.write("                    video: true,\r\n");
      out.write("                    audio: false\r\n");
      out.write("                })\r\n");
      out.write("                .then(function (stream) {\r\n");
      out.write("                    video.srcObject = stream;\r\n");
      out.write("                    video.play();\r\n");
      out.write("                })\r\n");
      out.write("                .catch(function (err) {\r\n");
      out.write("                    console.log(\"An error occurred: \" + err);\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("            video.addEventListener('canplay', function (ev) {\r\n");
      out.write("                if (!streaming) {\r\n");
      out.write("                    height = video.videoHeight / (video.videoWidth / width);\r\n");
      out.write("\r\n");
      out.write("                    if (isNaN(height)) {\r\n");
      out.write("                        height = width / (4 / 3);\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    video.setAttribute('width', width);\r\n");
      out.write("                    video.setAttribute('height', height);\r\n");
      out.write("                    canvas.setAttribute('width', width);\r\n");
      out.write("                    canvas.setAttribute('height', height);\r\n");
      out.write("                    streaming = true;\r\n");
      out.write("                }\r\n");
      out.write("            }, false);\r\n");
      out.write("\r\n");
      out.write("            startbutton.addEventListener('click', function (ev) {\r\n");
      out.write("                takepicture();\r\n");
      out.write("                ev.preventDefault();\r\n");
      out.write("            }, false);\r\n");
      out.write("            \r\n");
      out.write("            fileUpload_draw.onchange = () => {\r\n");
      out.write("             	  const selectedFile = fileUpload_draw.files[0];\r\n");
      out.write("             	  if (selectedFile) {\r\n");
      out.write("                  const reader = new FileReader();\r\n");
      out.write("                  reader.onload = function (e) {\r\n");
      out.write("                  	uploadedImage.src = e.target.result;\r\n");
      out.write("                  };\r\n");
      out.write("                  reader.readAsDataURL(selectedFile);\r\n");
      out.write("             	  takepicture_uploadfile();\r\n");
      out.write("             	};\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var saveButton = document.getElementById('savebutton');\r\n");
      out.write("            saveButton.addEventListener('click', function (ev) {\r\n");
      out.write("                saveResults();\r\n");
      out.write("                ev.preventDefault();\r\n");
      out.write("            }, false);\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            clearphoto();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function saveResults() {\r\n");
      out.write("            if (pose && pose.lastResults && pose.lastResults.poseLandmarks) {\r\n");
      out.write("                // poseLandmarks 데이터에서 x, y, z 값을 객체 형태로 추출하여 배열로 변환\r\n");
      out.write("                var landmarksData = pose.lastResults.poseLandmarks.map(landmark => ({\r\n");
      out.write("                    x: landmark.x,\r\n");
      out.write("                    y: landmark.y,\r\n");
      out.write("                    z: landmark.z\r\n");
      out.write("                }));\r\n");
      out.write("\r\n");
      out.write("                // 결과 배열을 JSON 문자열로 변환\r\n");
      out.write("                var jsonString = JSON.stringify(landmarksData, null, 2); // 포맷팅을 위해 추가적인 인자 사용\r\n");
      out.write("\r\n");
      out.write("                // JSON 파일 다운로드\r\n");
      out.write("                downloadJSON(jsonString, 'pose_landmarks.json');\r\n");
      out.write("            } else {\r\n");
      out.write("                console.log('No results to save.');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function downloadJSON(data, filename) {\r\n");
      out.write("            var blob = new Blob([data], { type: 'application/json' });\r\n");
      out.write("            var link = document.createElement('a');\r\n");
      out.write("            link.href = URL.createObjectURL(blob);\r\n");
      out.write("            link.download = filename;\r\n");
      out.write("            document.body.appendChild(link);\r\n");
      out.write("            link.click();\r\n");
      out.write("            document.body.removeChild(link);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function clearphoto() {\r\n");
      out.write("            var context = canvas.getContext('2d');\r\n");
      out.write("            context.fillStyle = \"#AAA\";\r\n");
      out.write("            context.fillRect(0, 0, canvas.width, canvas.height);\r\n");
      out.write("            var data = canvas.toDataURL('image/png');\r\n");
      out.write("            // 이미지 쳐박기\r\n");
      out.write("            photo.setAttribute('src', data);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function takepicture() {\r\n");
      out.write("            var context = canvas.getContext('2d');\r\n");
      out.write("            if (width && height) {\r\n");
      out.write("            	canvas.width = width;\r\n");
      out.write("                canvas.height = height;\r\n");
      out.write("                context.drawImage(video, 0, 0, width, height);\r\n");
      out.write("\r\n");
      out.write("                // 이미지 데이터 얻기\r\n");
      out.write("                var imageData = context.getImageData(0, 0, width, height);\r\n");
      out.write("                var data = canvas.toDataURL('image/png');\r\n");
      out.write("                photo.setAttribute('src', data);\r\n");
      out.write("                // 딜레이를 둔 후에 이미지 분석\r\n");
      out.write("                setTimeout(function () {\r\n");
      out.write("                    analyzeImage(imageData);\r\n");
      out.write("                }, 1000);\r\n");
      out.write("            } else {\r\n");
      out.write("            	clearphoto();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function takepicture_uploadfile() {\r\n");
      out.write("            var context = canvas.getContext('2d');\r\n");
      out.write("            if (width && height) {\r\n");
      out.write("                canvas.height = height;\r\n");
      out.write("                var img = uploadedImage;\r\n");
      out.write("                img.onload = function() {\r\n");
      out.write("                	context.drawImage(img, 0, 0, width, height);\r\n");
      out.write("                    // 이미지 데이터 얻기\r\n");
      out.write("                    var imageData = context.getImageData(0, 0, width, height);\r\n");
      out.write("                    var data = canvas.toDataURL('image/png');\r\n");
      out.write("                    photo.setAttribute('src', data);\r\n");
      out.write("                    // 딜레이를 둔 후에 이미지 분석\r\n");
      out.write("                    setTimeout(function () {\r\n");
      out.write("                        analyzeImage(imageData);\r\n");
      out.write("                    }, 1000);\r\n");
      out.write("                }\r\n");
      out.write("            } else {\r\n");
      out.write("                clearphoto();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function analyzeImage(imageData) {\r\n");
      out.write("            if (!pose) {\r\n");
      out.write("                pose = new Pose({\r\n");
      out.write("                    locateFile: (file) => {\r\n");
      out.write("                       return 'https://cdn.jsdelivr.net/npm/@mediapipe/pose/' + file;\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                pose.setOptions({\r\n");
      out.write("                    upperBodyOnly: true,\r\n");
      out.write("                    modelComplexity: 1,\r\n");
      out.write("                    smoothLandmarks: true,\r\n");
      out.write("                    enableSegmentation: false,\r\n");
      out.write("                    minDetectionConfidence: 0.5,\r\n");
      out.write("                    minTrackingConfidence: 0.5\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                pose.onResults((results) => {\r\n");
      out.write("                    console.log(results);\r\n");
      out.write("                    pose.lastResults = results; // 결과 업데이트\r\n");
      out.write("                    \r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Mediapipe에 이미지 전달\r\n");
      out.write("            pose.send({\r\n");
      out.write("                image: imageData\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        window.addEventListener('load', startup, false);\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("    </script>\r\n");
      out.write("      \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/draw.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("cpath");
      // /WEB-INF/draw.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/draw.jsp(7,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent(null);
      // /WEB-INF/header.jsp(8,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/header.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setVar("userDetails");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /WEB-INF/header.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("cpath");
      // /WEB-INF/header.jsp(9,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/header.jsp(9,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f2_reused = false;
    try {
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent(null);
      // /WEB-INF/header.jsp(11,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("user");
      // /WEB-INF/header.jsp(11,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/header.jsp(11,0) '${SPRING_SECURITY_CONTEXT.authentication.principal}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${SPRING_SECURITY_CONTEXT.authentication.principal}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      _jspx_th_c_005fset_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f3_reused = false;
    try {
      _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f3.setParent(null);
      // /WEB-INF/header.jsp(13,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setVar("auth");
      // /WEB-INF/header.jsp(13,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/header.jsp(13,0) '${SPRING_SECURITY_CONTEXT.authentication.authorities}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${SPRING_SECURITY_CONTEXT.authentication.authorities}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
      if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
      _jspx_th_c_005fset_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/header.jsp(64,21) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/member/logout\" class=\"text-white\">Logout</a></li>\r\n");
          out.write("                     ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/header.jsp(67,21) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/member/login\" class=\"text-white\">Login</a></li>\r\n");
          out.write("                     ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/header.jsp(83,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <form id=\"app-cover\">\r\n");
          out.write("        <div id=\"select-box\">\r\n");
          out.write("          <input type=\"checkbox\" id=\"options-view-button\">\r\n");
          out.write("          <div id=\"select-button\" class=\"brd\">\r\n");
          out.write("            <div id=\"selected-value\">\r\n");
          out.write("            ");
          if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("              \r\n");
          out.write("            </div>\r\n");
          out.write("            <div id=\"chevrons\">\r\n");
          out.write("              <i class=\"fas fa-chevron-up\"></i>\r\n");
          out.write("              <i class=\"fas fa-chevron-down\"></i>\r\n");
          out.write("            </div>\r\n");
          out.write("          </div>\r\n");
          out.write("          <div id=\"options\">\r\n");
          out.write("            <div class=\"option\">\r\n");
          out.write("              <input class=\"s-c top\" type=\"radio\" name=\"platform\" value=\"codepen\">\r\n");
          out.write("              <input class=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"codepen\">\r\n");
          out.write("              <i class=\"fab fa-codepen\"></i>\r\n");
          out.write("              <span class=\"label\">My Page</span>\r\n");
          out.write("              <span class=\"opt-val\">My Page</span>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"option\">\r\n");
          out.write("              <input class=\"s-c top\" type=\"radio\" name=\"platform\" value=\"dribbble\">\r\n");
          out.write("              <input class=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"dribbble\">\r\n");
          out.write("              <i class=\"fab fa-dribbble\"></i>\r\n");
          out.write("              <span class=\"label\">회원정보수정</span>\r\n");
          out.write("              <span class=\"opt-val\">회원정보수정</span>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"option\">\r\n");
          out.write("              <input class=\"s-c top\" type=\"radio\" name=\"platform\" value=\"behance\">\r\n");
          out.write("              <input class=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"behance\">\r\n");
          out.write("              <i class=\"fab fa-behance\"></i>\r\n");
          out.write("              <span class=\"label\">내갤러리</span>\r\n");
          out.write("              <span class=\"opt-val\">내갤러리</span>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"option\">\r\n");
          out.write("              <input class=\"s-c top\" type=\"radio\" name=\"platform\" value=\"hackerrank\">\r\n");
          out.write("              <input class=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"hackerrank\">\r\n");
          out.write("              <i class=\"fab fa-hackerrank\"></i>\r\n");
          out.write("              <span class=\"label\">나의 구독</span>\r\n");
          out.write("              <span class=\"opt-val\">나의 구독</span>\r\n");
          out.write("            </div>\r\n");
          out.write("            <div id=\"option-bg\"></div>\r\n");
          out.write("          </div>\r\n");
          out.write("        </div>\r\n");
          out.write("      </form>\r\n");
          out.write("   ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/header.jsp(89,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("             <p>안녕하세요, ");
          if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("님!</p>\r\n");
          out.write("           ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /WEB-INF/header.jsp(90,23) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }
}
